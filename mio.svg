<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 3660 2074.730158730159" width="7320" height="4149.460317460318">
  <!-- svg-source:excalidraw -->
  
  <defs>
    <style>
      @font-face {
        font-family: "Virgil";
        src: url("https://excalidraw.com/FG_Virgil.woff2");
      }
      @font-face {
        font-family: "Cascadia";
        src: url("https://excalidraw.com/Cascadia.woff2");
      }
    </style>
  </defs>
  <rect x="0" y="0" width="3660" height="2074.730158730159" fill="#ffffff"></rect><g transform="translate(1153.5277777777778 27.146825396825307) rotate(0 523.5 50.5)"><text x="0" y="16.2" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/event/source.rs 中定义了 Source trait，要求了三个方法 </text><text x="0" y="36.4" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    - fn register(&amp;mut self, registry: &amp;Registry, token: Token, interests: Interest) -&gt; io::Result&lt;()&gt;;</text><text x="0" y="56.599999999999994" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    - fn reregister(&amp;mut self, registry: &amp;Registry, token: Token, interests: Interest) -&gt; io::Result&lt;()&gt;;</text><text x="0" y="76.8" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    - fn deregister(&amp;mut self, registry: &amp;Registry) -&gt; io::Result&lt;()&gt;;</text><text x="0" y="97" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">实现了 Source trait 的类型可以被注册到 Registry 中: registry 通过 register 方法调用 Source trait 的实例的 register 方法</text></g><g transform="translate(1141.2777777777778 1942.7301587301588) rotate(0 487.5 61)"><text x="0" y="16.333333333333332" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/sys/unix/net.rs 中定义了各种 socket 相关的函数</text><text x="0" y="36.666666666666664" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    - pub(crate) fn new_socket(domain: libc::c_int, socket_type: libc::c_int) -&gt; io::Result&lt;libc::c_int&gt;</text><text x="0" y="57" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    - ...</text><text x="0" y="77.33333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/sys/unix/tcp.rs 中定义了 pub type TcpSocket = libc::c_int;</text><text x="0" y="97.66666666666666" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"> </text><text x="0" y="118" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/net/tcp/socket.rs 中定义了 pub struct TcpSocket { sys: sys::tcp::TcpSocket }</text></g><g transform="translate(1155.0277777777778 1085.3968253968253) rotate(0 501.5 218.5)"><text x="0" y="15.863636363636363" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/io_source.rs 中定义了 </text><text x="0" y="35.72727272727273" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct IoSource&lt;T&gt; {</text><text x="0" y="55.59090909090909" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    state: IoSourceState, // `epoll` does't need to hold any user space state. so it's just an empty struct</text><text x="0" y="75.45454545454545" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    inner: T,</text><text x="0" y="95.31818181818181" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    selector_id: SelectorId,</text><text x="0" y="115.18181818181819" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">} </text><text x="0" y="135.04545454545453" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="154.9090909090909" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">IoSource 的作用是 Adapter for a [`RawFd`] or [`RawSocket`] providing an [`event::Source`] implementation. </text><text x="0" y="174.77272727272728" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">所以这里我们要求 T: AsRawFd 或 T: AsRawSocket</text><text x="0" y="194.63636363636363" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl&lt;T&gt; event::Source for IoSource&lt;T&gt; where T: AsRawFd {</text><text x="0" y="214.5" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    fn register(&amp;mut self, registry: &amp;Registry, token: Token, interests: Interest, ) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="234.36363636363637" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        // 将 self.selector_id 与将要注册的 registry 关联</text><text x="0" y="254.22727272727275" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        self.selector_id.associate(registry)?;</text><text x="0" y="274.09090909090907" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        // poll::selector(registry) 返回 registry 包裹的 selector</text><text x="0" y="293.95454545454544" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        poll::selector(registry).register(self.inner.as_raw_fd(), token, interests)</text><text x="0" y="313.8181818181818" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="333.6818181818182" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="353.54545454545456" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    // ...</text><text x="0" y="373.4090909090909" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="393.27272727272725" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="413.1363636363636" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="433" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text></g><g transform="translate(1150.0277777777778 355.1468253968253) rotate(0 413.5 113.5)"><text x="0" y="16.636363636363637" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">我们以官方 examples/tcp_server.rs 流程为例看 mio 的实现</text><text x="0" y="37.27272727272727" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    1. 通过 Poll::new() 得到一个 Poll instance</text><text x="0" y="57.90909090909091" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    2. 通过 mio::net::TcpListener::bind(addr) 得到 一个 mio::net::TcpListener instance</text><text x="0" y="78.54545454545455" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    3. const SERVER: Token = Token(0); </text><text x="0" y="99.18181818181819" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">       通过 poll.registry().register(&amp;server, SERVER, Interests::READABLE) 注册感兴趣的事件</text><text x="0" y="119.81818181818181" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    4. let mut events = Events::with_capacity(128);</text><text x="0" y="140.45454545454547" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">       通过 poll.poll(&amp;mut events, None) 获取 ready 的事件到 events 中</text><text x="0" y="161.0909090909091" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">           （本质上即是调用 libc::epoll_wait</text><text x="0" y="181.72727272727272" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    5. 遍历 events 来处理每个就绪的事件，根据从 events[i] 中得到的 Token to identify event src</text><text x="0" y="202.36363636363637" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    ...</text><text x="0" y="223" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    此后的行为即是按照一般的 epoll 代码逻辑编写，不在赘述</text></g><g transform="translate(2256.670634920635 341.3611111111111) rotate(0 459.5 293.5)"><text x="0" y="15.566666666666666" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/poll.rs 中定义了</text><text x="0" y="35.13333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct Poll {</text><text x="0" y="54.7" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    registry: Registry,</text><text x="0" y="74.26666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="93.83333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="113.4" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl Poll {</text><text x="0" y="132.96666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    pub fn poll(&amp;mut self, events: &amp;mut Events, timeout: Option&lt;Duration&gt;) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="152.53333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        self.registry.selector.select(events.sys(), timeout)</text><text x="0" y="172.1" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="191.66666666666666" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="211.23333333333332" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="230.8" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct Registry {</text><text x="0" y="250.36666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    selector: sys::Selector,</text><text x="0" y="269.93333333333334" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="289.5" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="309.06666666666666" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="328.6333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl Registry {</text><text x="0" y="348.2" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    pub fn register&lt;S&gt;(&amp;self, source: &amp;mut S, token: Token, interests: Interest) -&gt; io::Result&lt;()&gt;</text><text x="0" y="367.76666666666665" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    where</text><text x="0" y="387.3333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        S: event::Source + ?Sized,</text><text x="0" y="406.9" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    {</text><text x="0" y="426.46666666666664" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        trace!(</text><text x="0" y="446.0333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            "registering event source with poller: token={:?}, interests={:?}",</text><text x="0" y="465.6" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            token,</text><text x="0" y="485.1666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            interests</text><text x="0" y="504.73333333333335" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        );</text><text x="0" y="524.3" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        source.register(self, token, interests)</text><text x="0" y="543.8666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="563.4333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="583" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text></g><g transform="translate(2255.2420634920636 1081.6468253968253) rotate(0 400.5 350)"><text x="0" y="14.073170731707318" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/sys/unix/selector/epoll.rs 中定义了</text><text x="0" y="31.146341463414636" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct Selector {</text><text x="0" y="48.21951219512195" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    id: usize, // unique id for use as `SelectorId`.</text><text x="0" y="65.29268292682927" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    ep: RawFd,</text><text x="0" y="82.3658536585366" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    has_waker: AtomicBool,</text><text x="0" y="99.4390243902439" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">} </text><text x="0" y="116.51219512195122" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="133.58536585365854" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">Selector::new 通过系统调用 epoll_create1 创建一个 epoll 对象 ep，并包含在结构体中</text><text x="0" y="150.65853658536585" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="167.7317073170732" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl Selector {</text><text x="0" y="184.8048780487805" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    pub fn new() -&gt; io::Result&lt;Selector&gt; {</text><text x="0" y="201.8780487804878" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        syscall!(epoll_create1(flag)).map(|ep| Selector {</text><text x="0" y="218.95121951219514" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            id: NEXT_ID.fetch_add(1, Ordering::Relaxed),</text><text x="0" y="236.02439024390245" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            ep,</text><text x="0" y="253.09756097560978" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            has_waker: AtomicBool::new(false),</text><text x="0" y="270.1707317073171" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        })</text><text x="0" y="287.2439024390244" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="304.3170731707317" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="321.39024390243907" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    pub fn register(&amp;self, fd: RawFd, token: Token, interests: Interest) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="338.4634146341464" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        let mut event = libc::epoll_event {</text><text x="0" y="355.5365853658537" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            events: interests_to_epoll(interests),</text><text x="0" y="372.609756097561" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            u64: usize::from(token) as u64,</text><text x="0" y="389.6829268292683" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        };</text><text x="0" y="406.7560975609756" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="423.82926829268297" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        syscall!(epoll_ctl(self.ep, libc::EPOLL_CTL_ADD, fd, &amp;mut event)).map(|_| ())</text><text x="0" y="440.9024390243903" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="457.9756097560976" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="475.0487804878049" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    pub fn select(&amp;self, events: &amp;mut Events, timeout: Option&lt;Duration&gt;) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="492.1219512195122" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        let timeout = timeout</text><text x="0" y="509.19512195121956" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            .map(|to| cmp::min(to.as_millis(), libc::c_int::max_value() as u128) as libc::c_int)</text><text x="0" y="526.2682926829268" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            .unwrap_or(-1);</text><text x="0" y="543.3414634146342" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="560.4146341463415" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        events.clear();</text><text x="0" y="577.4878048780488" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        syscall!(epoll_wait(self.ep, events.as_mut_ptr(), events.capacity() as i32, timeout))</text><text x="0" y="594.5609756097562" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        .map(|n_events| {</text><text x="0" y="611.6341463414634" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            // This is safe because `epoll_wait` ensures that `n_events` are</text><text x="0" y="628.7073170731708" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            // assigned.</text><text x="0" y="645.7804878048781" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            unsafe { events.set_len(n_events as usize) };</text><text x="0" y="662.8536585365854" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        })</text><text x="0" y="679.9268292682927" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="697" font-family="Cascadia, Segoe UI Emoji" font-size="14.238993710691815px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text></g><g transform="translate(1152.5277777777778 681.1468253968253) rotate(0 483 98.5)"><text x="0" y="15.7" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/net/tcp/listener.rs 中定义了 </text><text x="0" y="35.4" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct TcpListener {</text><text x="0" y="55.099999999999994" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    inner: IoSource&lt;net::TcpListener&gt;,</text><text x="0" y="74.8" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="94.5" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="114.19999999999999" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl event::Source for TcpListener {</text><text x="0" y="133.9" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    fn register( &amp;mut self, registry: &amp;Registry, token: Token, interests: Interest) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="153.6" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        self.inner.register(registry, token, interests)</text><text x="0" y="173.29999999999998" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="193" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text></g><g transform="translate(1132.0000000000005 342.03571428571433) rotate(0 496.5 134.25)"><path d="M-0.7001491993665696 -0.10200262367725373 C268.8618161704391 -3.5091147838681938, 539.4729545138777 -3.163167422875762, 993.6370895892381 -0.6484378844499589 M-0.04380655437707901 -0.18618633598089218 C304.5113206196576 -2.645526806071401, 609.2044345490634 -2.028227201655507, 992.849749802053 0.07269489914178849 M993.3783264534457 0.24606627485804702 C993.2925658044697 98.89018231567792, 992.1006220011808 196.41391602148957, 993.2984912834713 268.57694924181345 M992.9271236206054 -0.5829665602872259 C995.0776640922434 65.90399565287905, 994.7014556238572 131.99101145018764, 992.5506275716726 268.01702500842276 M992.6920789271593 268.8418929070234 C773.5700739655643 272.172016239509, 555.3638435401023 272.1908456805795, 0.36467538177967074 268.5453538864851 M993.0266550049186 268.7637424245477 C635.7465327661484 268.9666542914659, 278.6445340014994 268.6834015277177, -0.1215397372841835 268.85534155517814 M-0.45198396940181396 267.6830378050343 C-1.450051965672865 193.80470408443912, 0.1586932837389562 120.51072504182393, -0.6384731156487717 -0.7303614818646416 M0.7212181915146834 268.41986980528793 C-1.500947734607263 209.4626681392561, -0.7895554274150567 150.14024405009118, 0.10212781150438859 -0.286317671657861" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(1133.0000000000005 662.5357142857143) rotate(0 501.75 130.5)"><path d="M-0.18669300377368928 -0.6579851597547531 C231.39987270068377 -0.9974824160858987, 462.40459941588347 -0.9685960978791116, 1003.8730271309614 -0.007361361384391785 M0.22123377472162248 -0.024460412561893463 C283.52563149649654 2.2481766308471562, 566.7306410957128 2.8756013001129035, 1003.3384386792779 -0.3265125766396523 M1002.2676997944371 -1.493232326242721 C1003.8087724733946 60.00030204090161, 1003.6529522998568 117.85286923081205, 1003.8273657335892 260.1403628869672 M1003.0285645964037 -0.34137179469009044 C1002.6142734398816 78.94676176761295, 1002.2705034982173 158.97813300710717, 1004.2065127259029 261.73396806335035 M1002.8705387085677 260.27400126755236 C795.9271604912356 262.4151239449307, 587.5822167221456 262.71478052680936, 0.18113164603710175 260.40568585693836 M1003.2556565538049 260.69750871509314 C719.8035271821543 263.73392920733244, 435.8134354691951 263.9002363228872, -0.3964714273810387 261.32772888988256 M0.3326254854794383 261.7712991779664 C-2.469360388180167 195.75583533644846, -1.8560550461662357 131.15932712785286, 0.27053909628685713 -0.9821951371195674 M-0.6801176538476408 260.29703192053324 C-2.0351020113448204 165.57524114069975, -1.0952115656678263 70.71010037672929, -0.17280492482447027 0.7601137979950369" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(1142.5000000000005 1072.5357142857142) rotate(0 516.75 248)"><path d="M0.6664570361375809 -0.6524086028337479 C228.25537830535322 3.715707210324705, 455.56075770445165 4.038024810574949, 1033.5115479975939 0.6333918541669846 M0.19198441356420518 0.07962715774774552 C317.2502745261416 -0.7844974910840392, 635.3652525659651 -1.1963253891095518, 1033.585301207006 -0.025436614453792573 M1033.1384906033554 -0.7229862301071852 C1031.843235991502 167.64026388478493, 1031.9253723025884 334.5660128562474, 1033.106850229681 496.7850481286793 M1033.2012335644074 0.38995151237670034 C1033.7223113286173 137.9633423436962, 1033.9087379900623 276.2772482274678, 1033.4905545733036 496.2663543366204 M1033.2892820864915 495.6355970352888 C813.470819598995 495.44334455726295, 593.3666668038815 494.5082708000913, -0.4113239735364914 495.3804734200239 M1033.6806924328207 495.80442469269036 C667.7661762693897 496.86028689368817, 302.0328597519547 497.26148084624856, 0.0024729713797569278 496.17280147224665 M-0.44377357327974143 495.9834650136026 C-0.9627534559611477 384.84346200821807, -1.9895695540727774 272.506384643193, 0.5369260067017764 -0.43162329855210485 M-0.2387005519243106 495.9504636616018 C-1.4193583305801636 386.7903019612174, -1.3971052173191791 277.133876907328, -0.12106642820581048 -0.325109522678031" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(411.5 1090.5000000000002) rotate(0 347 295)"><text x="0" y="15.666666666666668" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">（我不知道 SelectorId 有什么作用，看起来只是在运行时检查是否被注册到了多个 Selector</text><text x="0" y="35.333333333333336" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="55" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/io_source.rs 中定义了</text><text x="0" y="74.66666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">struct SelectorId {</text><text x="0" y="94.33333333333334" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    id: AtomicUsize,</text><text x="0" y="114" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="133.66666666666669" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="153.33333333333334" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">impl SelectorId {</text><text x="0" y="173" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    /// Value of `id` if `SelectorId` is not associated with any</text><text x="0" y="192.66666666666669" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    /// `sys::Selector`. Valid selector ids start at 1.</text><text x="0" y="212.33333333333334" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    const UNASSOCIATED: usize = 0;</text><text x="0" y="232" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="251.66666666666669" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    /// Associate an I/O source with `registry`, returning an error if its</text><text x="0" y="271.33333333333337" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    /// already registered.</text><text x="0" y="291" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    fn associate(&amp;self, registry: &amp;Registry) -&gt; io::Result&lt;()&gt; {</text><text x="0" y="310.6666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        // poll::selector(&amp;registry) 返回 registry 包裹的 selector</text><text x="0" y="330.33333333333337" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        let registry_id = poll::selector(&amp;registry).id();</text><text x="0" y="350" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        let previous_id = self.id.swap(registry_id, Ordering::AcqRel);</text><text x="0" y="369.6666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="389.33333333333337" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        if previous_id == Self::UNASSOCIATED {</text><text x="0" y="409" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            Ok(())</text><text x="0" y="428.6666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        } else {</text><text x="0" y="448.33333333333337" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            Err(io::Error::new(</text><text x="0" y="468" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">                io::ErrorKind::AlreadyExists,</text><text x="0" y="487.6666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">                "I/O source already registered with a `Registry`",</text><text x="0" y="507.33333333333337" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">            ))</text><text x="0" y="527" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">        }</text><text x="0" y="546.6666666666667" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    }</text><text x="0" y="566.3333333333334" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="586" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text></g><g transform="translate(25.5 353.5000000000002) rotate(0 531.5 61)"><text x="0" y="16.333333333333332" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/token.rs 中定义了 pub struct Token(pub usize);</text><text x="0" y="36.666666666666664" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">Token 被用来跟踪 which socket generated the event:</text><text x="0" y="57" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    在进行系统调用 epoll_ctl(epoll_fd, EPOLL_CTL_ADD, req-&gt;client_fd, &amp;event) 时，event.data.u64 被设置为我们的 Token </text><text x="0" y="77.33333333333333" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    </text><text x="0" y="97.66666666666666" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    </text><text x="0" y="118" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text></g><g transform="translate(3245 329.0000000000002) rotate(0 195 129)"><text x="0" y="15.846153846153847" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/event/events.rs 中定义了 </text><text x="0" y="35.69230769230769" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct Events {</text><text x="0" y="55.53846153846154" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    inner: sys::Events,</text><text x="0" y="75.38461538461539" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">}</text><text x="0" y="95.23076923076923" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="115.07692307692308" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/event/event.rs 中定义了</text><text x="0" y="134.92307692307693" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub struct Event {</text><text x="0" y="154.76923076923077" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    inner: sys::Event,</text><text x="0" y="174.6153846153846" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">} </text><text x="0" y="194.46153846153845" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="214.30769230769232" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">在 src/sys/unix/selector/epoll.rs 中定义了 </text><text x="0" y="234.15384615384616" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub type Event = libc::epoll_event;</text><text x="0" y="254" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">pub type Events = Vec&lt;Event&gt;;</text></g><g transform="translate(29 470.5000000000002) rotate(0 220.5 107.5)"><text x="0" y="15.545454545454547" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">typedef union epoll_data {</text><text x="0" y="35.09090909090909" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    void* ptr;</text><text x="0" y="54.63636363636364" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    int fd;</text><text x="0" y="74.18181818181819" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    uint32_t u32;</text><text x="0" y="93.72727272727273" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    uint64_t u64;</text><text x="0" y="113.27272727272728" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">} epoll_data_t;</text><text x="0" y="132.8181818181818" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr"></text><text x="0" y="152.36363636363637" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">struct epoll_event {</text><text x="0" y="171.90909090909093" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    uint32_t events; /* Epoll events */</text><text x="0" y="191.45454545454547" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">    epoll_data_t data; /* User data variable */</text><text x="0" y="211" font-family="Cascadia, Segoe UI Emoji" font-size="16px" fill="#000000" text-anchor="start" style="white-space: pre;" direction="ltr">};</text></g><g transform="translate(397 1073) rotate(0 360.5 305)"><path d="M-0.36088833510875706 0.3591759651899338 C182.71961789987984 2.462635044232011, 365.85242210850123 0.9289925614744426, 721.722932484746 0.6739711731672288 M-0.39500436931848526 -0.055911372601985934 C258.28494160063565 0.6310132103413345, 515.676311825961 0.11545148663222804, 721.2307297214866 -0.04561412185430527 M720.340143635869 -0.7265529662370682 C723.433222103268 146.75418349131942, 722.2763814927638 293.0114793971181, 721.7492116481066 610.3954657524824 M721.3942738041281 -0.00920092910528183 C720.0579497231543 177.703921725601, 720.501650942713 354.66501953899865, 720.7582387909293 610.3446769490838 M720.2260663539171 609.8489699333907 C449.6707420084625 610.539727913484, 180.03431719914073 611.4102175108045, 0.35149483978748325 610.6074113816023 M721.3265314087272 610.3976306691766 C472.35356249623 607.9655479145795, 224.8321545578539 608.3338088227063, -0.09261059910058976 609.9937708154321 M-0.63153814971447 609.821975132823 C2.5270329628884793 410.82308496013286, 1.7645954285562038 210.46852767318487, -0.7705109089612961 0.26791352927684786 M-0.2285538211464882 610.2784994378686 C2.4758314304053783 453.6867051847279, 2.4387861900031567 296.8605618715286, -0.09120321422815324 -0.07035400718450546" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(1131 10) rotate(0 544.5 70.5)"><path d="M-0.24012589156627656 -0.7169117957353592 C313.196134319529 1.2717901238352063, 625.620434691757 1.104010678187013, 1089.2479612857103 -0.26077747642993926 M0.028191374242305757 0.025826050341129305 C219.46977447755634 -2.0377446143180133, 438.3377232424915 -2.364118715956807, 1088.8924661144615 -0.36818883270025254 M1090.810514099896 -0.6738839223980904 C1087.3535487653687 40.739745843037966, 1087.93228769321 81.82573126032949, 1089.3863304927945 141.55921768397093 M1089.0301011763513 -0.9861163459718227 C1088.629863579832 57.03115482591093, 1089.1066016751156 112.0333541288972, 1088.5971562825143 141.33091324940324 M1089.5607326060533 140.92362680137157 C815.0733233366161 143.07578453432023, 541.8780557908117 142.02580904375017, 0.1431618243455887 141.16442298591136 M1089.215529154241 140.80780437141658 C862.8914703648537 138.2702583530694, 636.5151639558375 138.04899594576656, 0.22418560832738876 141.063499571383 M1.024467594921589 141.07527446001768 C1.6173361901566385 85.49386489130556, -1.7427218790724874 28.160494568198914, 1.955767996609211 -1.1230356767773628 M-0.6900996007025242 141.20217448845506 C-0.6059862598404289 85.77753878124058, -0.18902447070926431 28.928895658254618, -0.26331091299653053 -0.28108125552535057" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(2225 314) rotate(0 487 311)"><path d="M-0.5774796932935715 -0.32227497398853305 C212.38864466920495 0.9564413729608061, 424.5050162240863 1.6717094126641752, 974.5607326060533 -0.0763731986284256 M-0.3747328296303749 0.07158091217279434 C266.6330181278289 -1.87905046954751, 532.7664999812843 -1.7635742904245855, 974.215529154241 -0.19219562858343125 M973.6202533274889 0.4483712166547775 C974.3222391646802 206.78398740664124, 974.1703454535902 411.93102632611993, 974.4097870379686 622.0301097840071 M973.8202231392264 0.39115359932184224 C974.3528271310032 235.92356012538076, 974.5123898617924 471.3107289195061, 973.723960159719 622.080869795382 M973.9609825640916 621.7893512696028 C762.930217345804 620.3116514650881, 552.660050882399 620.1261687723696, 0.5148259669542313 621.9642508476973 M973.6861370548606 621.9217751756311 C590.1720284752547 621.8231967814268, 206.001912510395 621.6827494986355, 0.14607372134923935 621.9246032491326 M0.36316504776477815 622.7400206536055 C1.6895108622610568 479.09325748905536, 1.171278039842844 334.2819404914975, 0.7224314242601395 0.4872804611921311 M0.39424915164709096 621.6007991567254 C0.3066764194071293 441.8452676974237, 0.3830512839853764 262.13404928743836, -0.2359524264931679 -0.059579251706600195" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(3238 316) rotate(0 206 146)"><path d="M0.9401781615005403 -0.7943134074155241 C141.58069620512103 1.1646572487745275, 285.2718837756855 0.061471505178355215, 411.7668627250787 -0.11330652755950987 M-0.2082946301313594 -0.20160547084951846 C164.3971488425439 0.9381769492478245, 328.3339083448869 1.3288590025575988, 412.40417842170615 0.4068133767262891 M412.6390609959685 0.4143619954528659 C412.9498125191038 69.96301113859614, 411.04385732243736 141.25364700945852, 411.32531864141845 292.3869479087569 M412.1564761608746 0.3678671777069404 C412.96269445334497 100.82353755566453, 412.86115029302414 202.96176207916199, 411.6373885254688 292.3377225053544 M412.9267901257616 292.14089503797004 C269.9205138631109 293.26322125661176, 129.06678665572448 292.51136843118576, -0.3857223068699926 292.60331867858656 M411.75095989374853 291.68493193626267 C315.55363134047457 292.74990811060593, 218.9338346073955 292.54969311825835, -0.05826580987355262 292.31850199374145 M-1.0898658440566389 290.5229055419752 C-0.11099909563651666 183.92303445004137, -0.4204687335688172 75.65464779969385, 0.9509220213456778 -0.7571396227786211 M-0.3806263618694856 291.8165533980569 C-0.8208040175043915 183.29178390754547, -0.6678193936668728 75.39871096345276, 0.48800703332471096 0.46148561712587616" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(2245 1073) rotate(0 421.5 362.5)"><path d="M0.34134288132190704 0.16222428977489473 C268.2607701648027 -0.8470506858378649, 535.9672610469163 -2.1840989303141836, 843.2472950488329 -0.4206977874040604 M-0.2607836738228798 -0.2887191042304039 C221.02247672937813 -2.0431503833383324, 441.7341535754502 -1.646560007438064, 843.3834745869041 0.3017844453454018 M843.569877293706 -0.25315552055835727 C843.420743425563 259.8653431784362, 841.8995351392776 520.469385700673, 843.1733422785998 724.4051302880049 M843.2857393726706 0.1252581849694252 C844.784597909078 239.42057074643674, 844.7484712477773 479.1749912790955, 842.8664707168937 725.0079751744867 M842.9649430781603 725.5673258751631 C554.1340789269656 726.4077817446738, 265.0818799369037 727.5100218302756, -0.7804658383131028 724.7335187882185 M843.1937965378165 725.3526769414544 C517.9418661717326 723.265514931187, 192.69598896726964 723.6720998139232, -0.1915869250893593 724.907539011538 M0.6606222659349442 724.2973989456892 C0.8120577078312636 504.38273671157657, 0.7625962477177382 283.69639173820616, -0.45192227065563206 -0.33992681801319125 M0.3018155559897423 725.1387031808496 C-0.709669890627265 562.8792084094136, -0.6089648868888617 399.95899739041926, -0.29133310467004775 0.2597044721245766" stroke="#000000" stroke-width="1" fill="none"></path></g><g transform="translate(10 341) rotate(0 540.5 180)"><path d="M0.5194089442491532 0.38914785087108617 C390.2423003133387 3.8518712833076725, 779.0669037185611 2.906980021253229, 1081.0480112582445 0.7514467209577561 M-0.3363630309700966 0.22013204246759416 C255.05949787087738 2.3506361116617924, 509.00301349684594 2.9511968244761233, 1080.7378299221396 -0.01182839721441269 M1080.7633491654503 1.107005455256894 C1079.1441947181359 129.76218486739728, 1080.6739359587123 257.0502904020505, 1082.025193002902 359.59025907458494 M1080.5444113009123 -0.23245765957341338 C1080.3849761263123 113.62665321415655, 1081.006806504891 226.7449100118596, 1080.4680675936315 360.30496818534556 M1080.6331336528062 359.79455461204054 C798.6216868761926 362.5620335216373, 516.7910536982117 361.634164964661, -0.30407824218273166 360.2391715973616 M1081.34395570606 359.8858872190118 C830.3866344761103 359.7782200419456, 580.1108546890317 359.71553307409584, 0.09885849803686142 359.9985587373376 M-0.16613228694315252 360.5622809670834 C-2.4183473878261923 250.19253082643027, -1.5808471931178452 137.5932875436415, -0.8721655558454542 0.5497337840737848 M0.15886301304814962 359.38304284723154 C-1.4908177743271722 281.36797592275707, -1.1449435869256392 202.01664857801737, 0.5459604666101708 0.4940797395595535" stroke="#000000" stroke-width="1" fill="none"></path></g></svg>